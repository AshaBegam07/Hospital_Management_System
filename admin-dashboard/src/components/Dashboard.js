import React, { useState } from "react";
import { FaUserMd, FaProcedures, FaDollarSign, FaChartLine } from "react-icons/fa";
import "../styles/dashboard.css";
import { Line } from "react-chartjs-2";
import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  PointElement,
  LineElement,
  Title,
  Tooltip,
  Legend,
} from "chart.js";

ChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);

const Dashboard = () => {
  const metrics = {
    doctors: 25,
    patients: 320,
    revenue: 75000,
    appointments: 120,
  };

  const chartDataSets = {
    doctors: [10, 15, 12, 20, 18, 25, 22, 28, 30, 35, 40, 50],
    patients: [100, 120, 150, 200, 220, 250, 280, 300, 320, 350, 400, 420],
    revenue: [5000, 7000, 8000, 6000, 10000, 11000, 9000, 12000, 15000, 14000, 13000, 16000],
    appointments: [20, 25, 30, 28, 35, 40, 50, 60, 55, 70, 65, 80],
  };

  const [currentChart, setCurrentChart] = useState("revenue");

  const chartData = {
    labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    datasets: [
      {
        label: `Monthly ${currentChart.charAt(0).toUpperCase() + currentChart.slice(1)}`,
        data: chartDataSets[currentChart],
        borderColor: "#4caf50",
        backgroundColor: "rgba(76, 175, 80, 0.2)",
        tension: 0.3,
      },
    ],
  };

  const chartDetails = {
    doctors: {
      title: "Doctors Overview",
      description: "Track the monthly growth of active doctors in the hospital.",
      highlight: "The hospital currently has 25 active doctors.",
    },
    patients: {
      title: "Patients Overview",
      description: "Monitor the total number of patients visiting each month.",
      highlight: "A total of 320 patients have been treated this year.",
    },
    revenue: {
      title: "Revenue Overview",
      description: "Analyze the revenue generated by the hospital monthly.",
      highlight: "Total revenue generated so far is $75,000.",
    },
    appointments: {
      title: "Appointments Overview",
      description: "Keep track of daily and monthly appointment counts.",
      highlight: "120 appointments were scheduled today.",
    },
  };

  const chartOptions = {
    responsive: true,
    plugins: {
      legend: { position: "top" },
      title: { display: true, text: `Hospital ${currentChart.charAt(0).toUpperCase() + currentChart.slice(1)} - 2024` },
    },
  };

  const hospitalNews = [
    { title: "New Doctors Joined", content: "5 new doctors have joined our team." },
    { title: "Health Camp Success", content: "Over 500 patients treated last week." },
    { title: "Advanced Equipment", content: "New MRI scanner installed." },
    { title: "Specialist Visits", content: "Top specialists visiting this month." },
    { title: "Community Events", content: "Join us for a health awareness walk." },
  ];

  return (
    <div className="dashboard">
      <header className="dashboard-header">
        <h1>Admin Dashboard</h1>
        <p>Welcome back! Manage operations seamlessly.</p>
      </header>

      <div className="dashboard-main">
        {/* Widgets Section */}
        <section className="dashboard-widgets">
          {[{ id: "doctors", icon: <FaUserMd />, title: "Doctors", value: `${metrics.doctors} Active` },
            { id: "patients", icon: <FaProcedures />, title: "Patients", value: `${metrics.patients} Total` },
            { id: "revenue", icon: <FaDollarSign />, title: "Revenue", value: `$${metrics.revenue}` },
            { id: "appointments", icon: <FaChartLine />, title: "Appointments", value: `${metrics.appointments} Today` },
          ].map((widget, index) => (
            <div
              key={index}
              className={`dashboard-widget ${currentChart === widget.id ? "active" : ""}`}
              onClick={() => setCurrentChart(widget.id)}
            >
              {widget.icon}
              <h3>{widget.title}</h3>
              <p>{widget.value}</p>
            </div>
          ))}
        </section>

        {/* Chart and Details Section */}
        <section className="dashboard-chart-section">
          <div className="dashboard-chart">
            <Line data={chartData} options={chartOptions} />
          </div>
          <div className="chart-details">
            <h3>{chartDetails[currentChart].title}</h3>
            <p>{chartDetails[currentChart].description}</p>
            <strong>{chartDetails[currentChart].highlight}</strong>
          </div>
        </section>
      </div>

      {/* Hospital News Section */}
        <section className="dashboard-news">
          <h2>Hospital News</h2>
          <div className="news-cards">
            {hospitalNews.map((news, index) => (
              <div key={index} className="news-card">
                <h3>{news.title}</h3>
                <p>{news.content}</p>
              </div>
            ))}
          </div>
        </section>
    </div>



  );
};

export default Dashboard;
